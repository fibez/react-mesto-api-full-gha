{"ast":null,"code":"import _defineProperty from\"C:/Users/1/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/1/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/1/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import*as auth from'./utils/auth.js';import{InfoTooltip}from'./InfoTooltip.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Login(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loginError=_useState2[0],setLoginError=_useState2[1];var _useState3=useState({password:'',email:''}),_useState4=_slicedToArray(_useState3,2),formValue=_useState4[0],setFormValue=_useState4[1];var navigate=useNavigate();var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setFormValue(_objectSpread(_objectSpread({},formValue),{},_defineProperty({},name,value)));};function handleSubmit(e){e.preventDefault();if(!formValue.email||!formValue.password){console.log('empty');return;}auth.authorize(formValue.email,formValue.password).then(function(data){if(data.token){localStorage.setItem('token',data.token);props.onLogin(true);navigate('/',{replace:true});return data;}}).catch(function(err){console.log(err);props.handleInfoTooltipOpen();setLoginError(true);});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"enterance-form\",name:'sign-in',onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"enterance-form__title\",children:\"\\u0412\\u0445\\u043E\\u0434\"}),/*#__PURE__*/_jsx(\"input\",{className:\"enterance-form__input\",placeholder:\"Email\",required:true,id:\"email\",name:\"email\",type:\"email\",value:formValue.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{className:\"enterance-form__input\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",required:true,id:\"password\",name:\"password\",type:\"password\",value:formValue.password,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"enterance-form__submit-button\",type:\"submit\",children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"})]}),/*#__PURE__*/_jsx(InfoTooltip,{isOpened:props.isInfoToooltipOpen,error:loginError,onClose:props.onClose})]});}export{Login};","map":{"version":3,"names":["React","useState","useNavigate","auth","InfoTooltip","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","props","_useState","_useState2","_slicedToArray","loginError","setLoginError","_useState3","password","email","_useState4","formValue","setFormValue","navigate","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","handleSubmit","preventDefault","console","log","authorize","then","data","token","localStorage","setItem","onLogin","replace","catch","err","handleInfoTooltipOpen","children","className","onSubmit","placeholder","required","id","type","onChange","isOpened","isInfoToooltipOpen","error","onClose"],"sources":["C:/Users/1/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as auth from './utils/auth.js';\r\nimport { InfoTooltip } from './InfoTooltip.js';\r\n\r\nfunction Login(props) {\r\n  const [loginError, setLoginError] = useState(false);\r\n  const [formValue, setFormValue] = useState({\r\n    password: '',\r\n    email: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormValue({\r\n      ...formValue,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!formValue.email || !formValue.password) {\r\n      console.log('empty');\r\n      return;\r\n    }\r\n    auth\r\n      .authorize(formValue.email, formValue.password)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          localStorage.setItem('token', data.token);\r\n          props.onLogin(true);\r\n          navigate('/', { replace: true });\r\n\r\n          return data;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.handleInfoTooltipOpen();\r\n        setLoginError(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className=\"enterance-form\" name={'sign-in'} onSubmit={handleSubmit}>\r\n        <h1 className=\"enterance-form__title\">Вход</h1>\r\n        <input\r\n          className=\"enterance-form__input\"\r\n          placeholder=\"Email\"\r\n          required\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={formValue.email}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          className=\"enterance-form__input\"\r\n          placeholder=\"Пароль\"\r\n          required\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={formValue.password}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"enterance-form__submit-button\" type=\"submit\">\r\n          Войти\r\n        </button>\r\n      </form>\r\n      <InfoTooltip isOpened={props.isInfoToooltipOpen} error={loginError} onClose={props.onClose} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Login };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}