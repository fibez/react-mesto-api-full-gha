{"ast":null,"code":"export const BASE_URL = 'http://104.131.160.75:3000';\n// export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const checkResponse = res => {\n  // if (res.ok) {\n  //   return res.json();\n  // } else {\n  //   return res.json().then((err) => {\n  //     console.log(err);\n  //   });\n  // }\n  // Promise.resolve()\n  if (!res.ok) {\n    throw new Error(`Ошибка HTTP: ${response.status}`);\n  }\n};\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    return checkResponse(res);\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    return checkResponse(res);\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json());\n  // .then((data) => data);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","Error","response","status","register","password","email","fetch","method","headers","Accept","body","JSON","stringify","then","authorize","checkToken","token","Authorization","json"],"sources":["C:/Users/1/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'http://104.131.160.75:3000';\r\n// export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const checkResponse = (res) => {\r\n  // if (res.ok) {\r\n  //   return res.json();\r\n  // } else {\r\n  //   return res.json().then((err) => {\r\n  //     console.log(err);\r\n  //   });\r\n  // }\r\n  // Promise.resolve()\r\n  if (!res.ok) {\r\n    throw new Error(`Ошибка HTTP: ${response.status}`);\r\n  }\r\n};\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then((res) => {\r\n    return checkResponse(res);\r\n  });\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n  // .then((data) => data);\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,4BAA4B;AACpD;;AAEA,OAAO,MAAMC,aAAa,GAAIC,GAAG,IAAK;EACpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;IACX,MAAM,IAAIC,KAAK,CAAE,gBAAeC,QAAQ,CAACC,MAAO,EAAC,CAAC;EACpD;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEV,QAAS,SAAQ,EAAE;IACjCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACS,IAAI,CAAEf,GAAG,IAAK;IACf,OAAOD,aAAa,CAACC,GAAG,CAAC;EAC3B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMgB,SAAS,GAAGA,CAACT,KAAK,EAAED,QAAQ,KAAK;EAC5C,OAAOE,KAAK,CAAE,GAAEV,QAAS,SAAQ,EAAE;IACjCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACS,IAAI,CAAEf,GAAG,IAAK;IACf,OAAOD,aAAa,CAACC,GAAG,CAAC;EAC3B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOV,KAAK,CAAE,GAAEV,QAAS,WAAU,EAAE;IACnCW,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAEf,GAAG,IAAKA,GAAG,CAACoB,IAAI,EAAE,CAAC;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}