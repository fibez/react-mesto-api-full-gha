{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\dev\\\\mesto-react\\\\src\\\\components\\\\PopupWithForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PopupWithForm(_ref) {\n  let {\n    popupType,\n    isOpened,\n    onClose,\n    name,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup popup__type_${props.popupType} ${props.isOpened ? 'popup_opened' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup__close-button\",\n          type: \"button\",\n          \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043F\\u043E\\u043F\\u0430\\u043F\",\n          onClick: props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"popup__description\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: `popup__form popup__form_type_${props.popupType}`,\n          name: props.name,\n          noValidate: \"\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = PopupWithForm;\nexport { PopupWithForm };\nvar _c;\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"names":["PopupWithForm","_ref","popupType","isOpened","onClose","name","children","_jsxDEV","_Fragment","className","props","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","_c","$RefreshReg$"],"sources":["C:/Users/1/dev/mesto-react/src/components/PopupWithForm.js"],"sourcesContent":["function PopupWithForm({ popupType, isOpened, onClose, name, children }) {\r\n  return (\r\n    <>\r\n      <div className={`popup popup__type_${props.popupType} ${props.isOpened ? 'popup_opened' : ''}`}>\r\n        <div className=\"popup__container\">\r\n          <button className=\"popup__close-button\" type=\"button\" aria-label=\"Закрыть попап\" onClick={props.onClose} />\r\n          <p className=\"popup__description\">{props.name}</p>\r\n          <form className={`popup__form popup__form_type_${props.popupType}`} name={props.name} noValidate=\"\">\r\n            {props.children}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { PopupWithForm };\r\n"],"mappings":";;;AAAA,SAASA,aAAaA,CAAAC,IAAA,EAAmD;EAAA,IAAlD;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAAL,IAAA;EACrE,oBACEM,OAAA,CAAAC,SAAA;IAAAF,QAAA,eACEC,OAAA;MAAKE,SAAS,EAAG,qBAAoBC,KAAK,CAACR,SAAU,IAAGQ,KAAK,CAACP,QAAQ,GAAG,cAAc,GAAG,EAAG,EAAE;MAAAG,QAAA,eAC7FC,OAAA;QAAKE,SAAS,EAAC,kBAAkB;QAAAH,QAAA,gBAC/BC,OAAA;UAAQE,SAAS,EAAC,qBAAqB;UAACE,IAAI,EAAC,QAAQ;UAAC,cAAW,2EAAe;UAACC,OAAO,EAAEF,KAAK,CAACN;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC3GT,OAAA;UAAGE,SAAS,EAAC,oBAAoB;UAAAH,QAAA,EAAEI,KAAK,CAACL;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAClDT,OAAA;UAAME,SAAS,EAAG,gCAA+BC,KAAK,CAACR,SAAU,EAAE;UAACG,IAAI,EAAEK,KAAK,CAACL,IAAK;UAACY,UAAU,EAAC,EAAE;UAAAX,QAAA,EAChGI,KAAK,CAACJ;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEP;AAACE,EAAA,GAdQlB,aAAa;AAgBtB,SAASA,aAAa;AAAG,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}