{"ast":null,"code":"export const BASE_URL = 'http://104.131.160.75:3000';\n// export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const checkResponse = res => {};\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","register","password","email","fetch","method","headers","Accept","body","JSON","stringify","then","ok","json","authorize","checkToken","token","Authorization","data"],"sources":["C:/Users/1/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'http://104.131.160.75:3000';\r\n// export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const checkResponse = (res) => {};\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n  });\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n  });\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data);\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,4BAA4B;AACpD;;AAEA,OAAO,MAAMC,aAAa,GAAIC,GAAG,IAAK,CAAC,CAAC;AAExC,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEN,QAAS,SAAQ,EAAE;IACjCO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACS,IAAI,CAAEX,GAAG,IAAK;IACf,IAAIA,GAAG,CAACY,EAAE,EAAE;MACV,OAAOZ,GAAG,CAACa,IAAI,EAAE;IACnB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACX,KAAK,EAAED,QAAQ,KAAK;EAC5C,OAAOE,KAAK,CAAE,GAAEN,QAAS,SAAQ,EAAE;IACjCO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACS,IAAI,CAAEX,GAAG,IAAK;IACf,IAAIA,GAAG,CAACY,EAAE,EAAE;MACV,OAAOZ,GAAG,CAACa,IAAI,EAAE;IACnB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOZ,KAAK,CAAE,GAAEN,QAAS,WAAU,EAAE;IACnCO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CACCL,IAAI,CAAEX,GAAG,IAAKA,GAAG,CAACa,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEO,IAAI,IAAKA,IAAI,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}