{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\InfoTooltip.js\";\nimport { Popup } from './Popup';\nimport loginerr from '../images/loginerr.png';\nimport loginsucces from '../images/loginsucces.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoTooltip(props) {\n  const selectedText = props.error ? 'Что-то пошло не так! Попробуйте ещё раз.' : 'Вы успешно зарегистрировались!';\n  const selectedImage = props.error ? loginerr : loginsucces;\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    isOpened: props.isOpened,\n    onClose: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__tooltip-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__tooltip-img\",\n        src: selectedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__tooltip-description\",\n        children: selectedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = InfoTooltip;\nexport { InfoTooltip };\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["Popup","loginerr","loginsucces","jsxDEV","_jsxDEV","InfoTooltip","props","selectedText","error","selectedImage","isOpened","onClose","children","className","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/1/dev/react-mesto-auth/src/components/InfoTooltip.js"],"sourcesContent":["import { Popup } from './Popup';\r\nimport loginerr from '../images/loginerr.png';\r\nimport loginsucces from '../images/loginsucces.png';\r\n\r\nfunction InfoTooltip(props) {\r\n  const selectedText = props.error ? 'Что-то пошло не так! Попробуйте ещё раз.' : 'Вы успешно зарегистрировались!';\r\n  const selectedImage = props.error ? loginerr : loginsucces;\r\n\r\n  return (\r\n    <Popup isOpened={props.isOpened} onClose={props.onClose}>\r\n      <div className=\"popup__tooltip-container\">\r\n        <img className=\"popup__tooltip-img\" src={selectedImage} />\r\n        <span className=\"popup__tooltip-description\">{selectedText}</span>\r\n      </div>\r\n    </Popup>\r\n  );\r\n}\r\n\r\nexport { InfoTooltip };\r\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,MAAMC,YAAY,GAAGD,KAAK,CAACE,KAAK,GAAG,0CAA0C,GAAG,gCAAgC;EAChH,MAAMC,aAAa,GAAGH,KAAK,CAACE,KAAK,GAAGP,QAAQ,GAAGC,WAAW;EAE1D,oBACEE,OAAA,CAACJ,KAAK;IAACU,QAAQ,EAAEJ,KAAK,CAACI,QAAS;IAACC,OAAO,EAAEL,KAAK,CAACK,OAAQ;IAAAC,QAAA,eACtDR,OAAA;MAAKS,SAAS,EAAC,0BAA0B;MAAAD,QAAA,gBACvCR,OAAA;QAAKS,SAAS,EAAC,oBAAoB;QAACC,GAAG,EAAEL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1Dd,OAAA;QAAMS,SAAS,EAAC,4BAA4B;QAAAD,QAAA,EAAEL;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEZ;AAACC,EAAA,GAZQd,WAAW;AAcpB,SAASA,WAAW;AAAG,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}